from typing import Any

class Node:
    def __init__(self, vale: Any=None, next = None):
        self.value: Any= value
        self.next: 'Node' =next


class LinkedList:
    def __init__(self):
        self.head: Node=None
        self.tail: Node=None


    def push(self, value:Any)->None:
        new= Node(value, self.head)
        self.head=new


    def append(self,value:Any)->None:
        if self.head is None:
            self.head=Node(value, None)
            return
        a=self.head
        while a.next:
            a=a.next
        a.next=Node(value,None)


    def node(self, ad:int)->Node:
        a=self.head
        i=0
        while a is not None:
            if i==at:
                return a
            i=i+1
            a=a.next



    def insert(self, value: Any,after: Node)->None:
        a=self.head
        while a is not None:
            if after==a.value:
                break
            a=a.next
        if a is None:
            print("Error")
        else:
            new=Node(value)
            new.next=a.next
            a.next=new


    def pop(self)->Any:
        a=self.head
        while a.next.next is not None:
            a=a.next
        print("deleted: {a.next.value}")
        a.next= None
